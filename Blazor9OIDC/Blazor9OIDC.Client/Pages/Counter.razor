@page "/counter"
@rendermode InteractiveWebAssembly
@inject HttpClient Http

<PageTitle>Counter</PageTitle>

<h1>Counter</h1>

<p role="status">Current count: @_currentCount</p>

<button class="btn btn-primary" @onclick="IncrementCount">Click me</button>

<hr/>

<p>Render Mode: @(RendererInfo.IsInteractive ? "Interactive" : "Not Interactive") (@RendererInfo.Name)</p>

<AuthorizeView>
    <Authorized>
        <p>Hello, @context.User.Claims.AsQueryable().Single(c => c.Type == "name").Value!</p>
        <p>The claims are:</p>
        <ul>
            @foreach(var c in context.User.Claims)
            {
                <li>@c.Type: @c.Value</li>
            }
        </ul>
    </Authorized>
    <NotAuthorized>
        <p>Not logged in</p>
    </NotAuthorized>
</AuthorizeView>

<button class="btn btn-primary" @onclick="CallMainApi">Call Main Secure Api</button>
<button class="btn btn-primary" @onclick="CallMinimalApi">Call Minimal Secure Api</button>
<p>@_message</p>

@code {
    private int _currentCount = 0;
    private string _message = string.Empty;

    private async Task CallMainApi()
    {
        _message = await Http.GetStringAsync("api/secureapi");
    }
    
    private async Task CallMinimalApi()
    {
        _message = await Http.GetStringAsync("api/minimalsecureapi");
    }
    
    private void IncrementCount()
    {
        _currentCount++;
    }
}
